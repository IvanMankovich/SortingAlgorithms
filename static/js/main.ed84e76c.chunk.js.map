{"version":3,"sources":["components/Header/index.js","components/Main/FormContainer/index.js","components/Main/SortContainer/NumberItem.js","components/Main/SortContainer/BlocksContainer.js","components/Main/SortContainer/index.js","components/Main/SqCont.js","components/Main/index.js","components/Footer/index.js","components/Main/Modal.js","App.js","serviceWorker.js","index.js"],"names":["HeaderContainer","styled","header","H1","h1","Header","props","StyledFormContainer","form","BlockSection","section","H2","h2","FormTitle","Row","div","Cell","Input","input","Label","label","LabelDuration","Select","select","ButtonSection","Button","button","SlideContainer","InputSlider","DescriptionSection","p","CurrentDuration","FormContainer","htmlFor","required","id","value","enteredNumber","type","placeholder","defaultNumber","onChange","e","handleChangeInputValue","target","disabled","btnDisabled","selectedSortType","handleChangeSortType","sortTypes","map","sortTypeValue","key","sortTypeName","onClick","handleAddNumber","handleAddRandomTen","handleSortBtnClick","handleClearList","ms","step","min","max","handleMSChange","find","sortTypeDescription","bounceInAnimation","keyframes","bounceIn","TextContainer","moveToLeft","moveToRight","StyledNumberItem","StyledNumberItemInitial","StyledNumberItemChecked","StyledNumberItemSelected","StyledNumberItemChangeToLeft","StyledNumberItemChangeToRight","StyledNumberItemSorted","NumberItem","state","StyledBlocksContainer","BlocksContainer","numberArray","number","StyledSortContainer","H3","h3","SortContainer","SquaresCntainer","animate","animateNum","Squares","SqContainer","React","memo","Math","round","random","MainContainer","main","MainSection","getRandomNumber","generateRandomIndex","chars","split","str","i","floor","length","Main","useState","setNumberArray","setEnteredNumber","setDefaultNumber","setMs","setSelectedSortType","setBtnDisabled","startSort","newArr","shakerSort","bubbleSort","handleDisableBtn","arr","outerLoop","currentIteration","iterationsAmount","setTimeout","innerLoop","currentInnerIteration","innerIterationsAmount","currentOuterIteration","outerIterationsAmount","currentIndex","index","setChanging","setSorted","slice","forwardLoop","startInd","currentInd","lastInd","setSelected","reverseLoop","array","startIndex","lastIndex","preventDefault","regexp","test","Number","handleShowModal","generatedArray","push","FooterContainer","footer","Link","a","Footer","href","ModalPadding","ModalWindow","ModalHeader","H4","h4","CloseBtn","ModalBody","ModalText","Modal","modalText","App","isModalOpen","setModalOpen","setModalText","text","Fragment","Boolean","window","location","hostname","match","RootContainer","Panel","slideOutDownAnimation","slideOutDown","slideOutUpAnimation","slideOutUp","PanelTop","PanelBottom","PanelTopHide","PanelBottomHide","StartButton","fadeOutAnimation","fadeOut","StartButtonHide","Root","startPage","setStartPage","handleClickStart","toRender","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ed84e76c.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst HeaderContainer = styled.header`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    padding: 1em 0;\r\n    background-color: #94ebd8;\r\n    color: #003d34;\r\n    text-align: center;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n    font-size: 32px;\r\n    font-weight: bold;\r\n    color: #003d34;\r\n    letter-spacing: 0.25em;\r\n    @supports (-webkit-text-stroke: 1px black) {\r\n        -webkit-text-stroke: 1px black;\r\n        -webkit-text-fill-color: #94ebd8;\r\n    }\r\n`;\r\n\r\nconst Header = props => {\r\n    return (\r\n        <HeaderContainer>\r\n            <H1>Sorting algorithms</H1>\r\n        </HeaderContainer>\r\n    )\r\n};\r\n\r\nexport { Header };","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFormContainer = styled.form`\r\n    display: block;\r\n    width: 100%;\r\n`;\r\n\r\nconst BlockSection = styled.section`\r\n    display: block;\r\n    margin: 0.5em;\r\n`;\r\n\r\nconst H2 = styled.h2`\r\n    font-size: 24px;\r\n    margin: 0.5em 0;\r\n`;\r\n\r\nconst FormTitle = styled(H2)`\r\n    text-align: center;\r\n`;\r\n\r\nconst Row = styled.div`\r\n    display: block;\r\n    margin: 0.5em;\r\n    box-sizing: border-box;\r\n    font-size: 0;\r\n`;\r\n\r\nconst Cell = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    font-size: 0;\r\n    height: 100%;\r\n    vertical-align: middle;\r\n\r\n    @media screen and (max-width: 480px) {\r\n        display: block;\r\n        width: 100%;\r\n        text-align: center;\r\n    }\r\n\r\n    @media screen and (max-width: 320px) {\r\n        display: block;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst Input = styled.input`\r\n    display: block;\r\n    box-sizing: border-box;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    border: none;\r\n    border-radius: 10px;\r\n    padding: 3px 10px;\r\n    width: 100%;\r\n    margin: auto 0;\r\n\r\n    &[disabled] {\r\n        background-image: linear-gradient(45deg, #ffffff99 25%, #94ebd899 25%, #94ebd899 50%, #ffffff99 50%, #ffffff99 75%, #94ebd899 75%, #94ebd899 100%);\r\n        background-size: 60px 60px;\r\n        background-color: #94ebd8;\r\n        cursor: not-allowed;\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst Label = styled.label`\r\n    display: block;\r\n    box-sizing: border-box;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    border: none;\r\n    border-radius: 10px;\r\n    padding: 3px 10px;\r\n    width: 100%;\r\n    margin: auto 0;\r\n`;\r\n\r\nconst LabelDuration = styled(Label)`\r\n    text-align: center;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    display: block;\r\n    box-sizing: border-box;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    border: none;\r\n    border-radius: 10px;\r\n    padding: 3px 10px;\r\n    width: 100%;\r\n    margin: auto 0;\r\n\r\n    &[disabled] {\r\n        background-image: linear-gradient(45deg, #ffffff99 25%, #94ebd899 25%, #94ebd899 50%, #ffffff99 50%, #ffffff99 75%, #94ebd899 75%, #94ebd899 100%);\r\n        background-size: 60px 60px;\r\n        background-color: #94ebd8;\r\n        cursor: not-allowed;\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst ButtonSection = styled.section`\r\n    display: flex;\r\n    margin: 0.5em;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n\r\n    @media screen and (max-width: 480px) {\r\n        display: block;\r\n    }\r\n`;\r\n\r\nconst Button = styled.button`\r\n    padding: 10px 20px;\r\n    color: #FFFFFF;\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n    background-color: #94ebd8;\r\n    border: 5px solid #FFFFFF;\r\n    border-radius: 10px;\r\n    transition: background-color 0.5s;\r\n\r\n    &:hover {\r\n        background-color: #00b349;\r\n    }\r\n\r\n    &[disabled] {\r\n        background-image: linear-gradient(45deg, #ffffff99 25%, #94ebd899 25%, #94ebd899 50%, #ffffff99 50%, #ffffff99 75%, #94ebd899 75%, #94ebd899 100%);\r\n        background-size: 60px 60px;\r\n        background-color: #94ebd8;\r\n        cursor: not-allowed;\r\n        opacity: 0.7;\r\n    }\r\n\r\n    @media screen and (max-width: 640px) {\r\n        display: block;\r\n        width: 100%;\r\n        margin-bottom: 0.5em;\r\n    }\r\n`;\r\n\r\nconst SlideContainer = styled.div`\r\n    width: 100%;\r\n    margin: 0.5em 0;\r\n`;\r\n\r\nconst InputSlider = styled(Input)`\r\n    -webkit-appearance: none;\r\n    appearance: none;\r\n    height: 10px;\r\n    background: linear-gradient(to left, #94ebd8, #00b349);\r\n    outline: none;\r\n    opacity: 0.7;\r\n    padding: 0;\r\n    transition: opacity .2s;\r\n    box-sizing: border-box;\r\n    border: 2px solid #FFFFFF;\r\n    transition: opacity 0.5s;\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n\r\n    &::-webkit-slider-thumb {\r\n        -webkit-appearance: none;\r\n        appearance: none;\r\n        width: 15px;\r\n        height: 15px;\r\n        border-radius: 50%;\r\n        border: 2px solid #FFFFFF;\r\n        background: #4CAF50;\r\n        cursor: pointer;\r\n    }\r\n\r\n    &[disabled]::-webkit-slider-thumb {\r\n        cursor: not-allowed;\r\n    }\r\n\r\n    &[disabled] {\r\n        background-image: linear-gradient(45deg, #ffffff99 25%, #94ebd899 25%, #94ebd899 50%, #ffffff99 50%, #ffffff99 75%, #94ebd899 75%, #94ebd899 100%);\r\n        background-size: 60px 60px;\r\n        background-color: #94ebd8;\r\n        cursor: not-allowed;\r\n        opacity: 0.5;\r\n    }\r\n`;\r\n\r\nconst DescriptionSection = styled.p`\r\n    font-size: 16px;\r\n    text-align: justify;\r\n`;\r\n\r\nconst CurrentDuration = styled(DescriptionSection)`\r\n    text-align: center;\r\n`;\r\n\r\nconst FormContainer = props => {\r\n    return (\r\n        <StyledFormContainer>\r\n            <BlockSection>\r\n                <FormTitle>Sorting algorithms form</FormTitle>\r\n                <DescriptionSection>Please, select sorting type and add few numbers to check how diffierent sorting types work. You can let number input field empty and press 'Add number', default value will be added.</DescriptionSection>\r\n            </BlockSection>\r\n            <BlockSection>\r\n                <Cell>\r\n                    <Row>\r\n                        <Cell>\r\n                            <Label htmlFor='inputNum'>Enter number:</Label>\r\n                        </Cell>\r\n                        <Cell>\r\n                            <Input \r\n                                required\r\n                                id='inputNum' \r\n                                value={props.enteredNumber} \r\n                                type='input' \r\n                                placeholder={`E.g. ${props.defaultNumber}`} \r\n                                onChange={(e) => props.handleChangeInputValue(e.target.value)} \r\n                                disabled={props.btnDisabled === 2 ? true : false}\r\n                                >\r\n                            </Input>\r\n                        </Cell>\r\n                    </Row>\r\n                </Cell>\r\n                <Cell>\r\n                    <Row>\r\n                        <Cell>\r\n                            <Label htmlFor='sortType'>Select sort type:</Label>\r\n                        </Cell>\r\n                        <Cell>\r\n                            <Select \r\n                                required\r\n                                id='sortType' \r\n                                value={props.selectedSortType} \r\n                                onChange={(e) => props.handleChangeSortType(e.target.value)}\r\n                                disabled={props.btnDisabled === 2 ? true : false}\r\n                            >\r\n                                {props.sortTypes.map(type => {\r\n                                    return (\r\n                                        <option\r\n                                            disabled={type.sortTypeValue === 'selectType'}\r\n                                            key={type.sortTypeValue}\r\n                                            value={type.sortTypeValue}\r\n                                        >{type.sortTypeName}</option>\r\n                                    )\r\n                                })}\r\n                            </Select>\r\n                        </Cell>\r\n                    </Row>\r\n                </Cell>\r\n            </BlockSection>\r\n            <ButtonSection>\r\n                <Button disabled={props.btnDisabled === 2 ? true : false} type='submit' onClick={e => props.handleAddNumber(e)}>Add number</Button>\r\n                <Button disabled={props.btnDisabled === 2 ? true : false} type='button' onClick={e => props.handleAddRandomTen(e)}>Add 10 random numbers</Button>\r\n                <Button disabled={props.btnDisabled === 2 ? true : false} type='button' onClick={e => props.handleSortBtnClick(e, 1)}>Sort numbers</Button>\r\n                <Button disabled={props.btnDisabled === 2 ? true : false} type='reset' onClick={e => props.handleClearList(e)}>Clear list</Button>\r\n            </ButtonSection>\r\n            <BlockSection>\r\n                <LabelDuration htmlFor='inputDuration'>Time per one action (comparison, changing, setting sorted etc.) (min 4ms):</LabelDuration>\r\n                <SlideContainer>\r\n                    <InputSlider \r\n                        id='inputDuration' \r\n                        value={props.ms} \r\n                        type='range' \r\n                        step='2'\r\n                        min='4'\r\n                        max='2000'\r\n                        placeholder={`E.g. ${props.ms}`} \r\n                        onChange={e => props.handleMSChange(e)} \r\n                        disabled={props.btnDisabled === 2 ? true : false}\r\n                        >\r\n                    </InputSlider>\r\n                </SlideContainer>\r\n\r\n                <CurrentDuration>Current action time: {props.ms} ms.</CurrentDuration>\r\n            </BlockSection>\r\n            {props.selectedSortType !== 'selectType' ?\r\n                <BlockSection>\r\n                    <DescriptionSection>{props.sortTypes.find(type => props.selectedSortType === type.sortTypeValue).sortTypeDescription}</DescriptionSection>\r\n                </BlockSection> :\r\n                null\r\n            }\r\n        </StyledFormContainer>\r\n    )\r\n};\r\n\r\nexport { FormContainer };","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { bounceIn } from 'react-animations';\r\n\r\nconst bounceInAnimation = keyframes`${bounceIn}`;\r\n\r\nconst TextContainer = styled.p`\r\n    display: block;\r\n    position: relative;\r\n    width: 100%;\r\n    word-wrap: break-word;\r\n    margin: 0;\r\n    text-align: center;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    font-weight: bold;\r\n    color: #FFFFFF;\r\n`;\r\n\r\nconst moveToLeft = keyframes`\r\n    from {\r\n        left: 0;\r\n    }\r\n\r\n    to {\r\n        left: -120px;\r\n    }\r\n`;\r\n\r\nconst moveToRight = keyframes`\r\n    from {\r\n        left: 0;\r\n    }\r\n\r\n    to {\r\n        left: 120px;\r\n    }\r\n`;\r\n\r\nconst StyledNumberItem = styled.section`\r\n    height: 100px;\r\n    width: 100px;\r\n    margin: 10px;\r\n    padding: 3px;\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    position: relative;\r\n`;\r\n\r\nconst StyledNumberItemInitial = styled(StyledNumberItem)`\r\n    background-color: #00b349; \r\n    border: 5px solid #003d34;\r\n    animation: 1 1s ${bounceInAnimation};\r\n`;\r\n\r\nconst StyledNumberItemChecked = styled(StyledNumberItem)`\r\n    background-color: #00b349; \r\n    border: 5px solid #003d34;\r\n`;\r\n\r\nconst StyledNumberItemSelected = styled(StyledNumberItem)`\r\n    background-color: #94ebd8; \r\n    border: 5px solid #003d34;\r\n`;\r\n\r\nconst StyledNumberItemChangeToLeft = styled(StyledNumberItem)`\r\n    background-color: #00787a; \r\n    border: 5px solid #003d34;\r\n    animation: ${moveToLeft} ${props => props.ms}ms ease 0s 1 forwards;\r\n`;\r\n\r\nconst StyledNumberItemChangeToRight = styled(StyledNumberItem)`\r\n    background-color: #00787a; \r\n    border: 5px solid #003d34;\r\n    animation: ${moveToRight} ${props => props.ms}ms ease 0s 1 forwards;\r\n`;\r\n\r\nconst StyledNumberItemSorted = styled(StyledNumberItem)`\r\n    background-color: #003d34; \r\n    border: 5px solid #003d34;\r\n`;\r\n\r\n\r\nconst NumberItem = props => {\r\n    switch (true) {\r\n        case props.state === 'initial':\r\n            return (\r\n                <StyledNumberItemInitial state={props.state} >\r\n                    <TextContainer>{props.value}</TextContainer>\r\n                </StyledNumberItemInitial>\r\n            );\r\n        case props.state === 'checked':\r\n            return (\r\n                <StyledNumberItemChecked state={props.state} >\r\n                    <TextContainer>{props.value}</TextContainer>\r\n                </StyledNumberItemChecked>\r\n            );\r\n        case props.state === 'selected':\r\n            return (\r\n                <StyledNumberItemSelected state={props.state} >\r\n                    <TextContainer>{props.value}</TextContainer>\r\n                </StyledNumberItemSelected>\r\n            );\r\n        case props.state === 'changeToLeft':\r\n            return (\r\n                <StyledNumberItemChangeToLeft state={props.state} ms={props.ms}>\r\n                    <TextContainer>{props.value}</TextContainer>\r\n                </StyledNumberItemChangeToLeft>\r\n            );\r\n        case props.state === 'changeToRight':\r\n            return (\r\n                <StyledNumberItemChangeToRight state={props.state} ms={props.ms}>\r\n                    <TextContainer>{props.value}</TextContainer>\r\n                </StyledNumberItemChangeToRight>\r\n            );\r\n        case props.state === 'sorted':\r\n            return (\r\n                <StyledNumberItemSorted state={props.state} >\r\n                    <TextContainer>{props.value}</TextContainer>\r\n                </StyledNumberItemSorted>\r\n            );\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\nexport { NumberItem };","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NumberItem } from './NumberItem';\r\n\r\nconst StyledBlocksContainer = styled.section`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: flex-start;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst BlocksContainer = props => {\r\n    return (\r\n        <StyledBlocksContainer>\r\n            {props.numberArray.map(number => {\r\n                return (\r\n                    <NumberItem key={number.id} value={number.value} state={number.state} ms={props.ms}/>\r\n                )\r\n            })}\r\n        </StyledBlocksContainer>\r\n    )\r\n};\r\n\r\nexport { BlocksContainer };","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BlocksContainer } from './BlocksContainer';\r\n\r\nconst StyledSortContainer = styled.section`\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 100%;\r\n    color: #003d34;\r\n    text-align: center;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst H3 = styled.h3`\r\n    font-size: 18px;\r\n`;\r\n\r\nconst FormTitle = styled(H3)`\r\n    text-align: center;\r\n    padding: 1em 0;\r\n`;\r\n\r\nconst SortContainer = props => {\r\n    return (\r\n        <StyledSortContainer>\r\n            <FormTitle>Container</FormTitle>\r\n            <BlocksContainer numberArray={props.numberArray} ms={props.ms}/>\r\n        </StyledSortContainer>\r\n    )\r\n};\r\n\r\nexport { SortContainer };","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst SquaresCntainer = styled.div`\r\n    background: #00b349;\r\n    background: linear-gradient(to left, #00b349, #94ebd8);\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst animate = keyframes`\r\n    0% {\r\n        transform: translateY(0) rotate(0deg);\r\n        opacity: 1;\r\n        border-radius: 0;\r\n    }\r\n\r\n    100% {\r\n        transform: translateY(-100vh) rotate(720deg);\r\n        opacity: 0;\r\n        border-radius: 25%;\r\n    }\r\n`;\r\n\r\nconst animateNum = keyframes`\r\n    0% {\r\n        transform: translateY(0) rotate(0deg);\r\n        opacity: 1;\r\n    }\r\n\r\n    100% {\r\n        transform: translateY(-100vh) rotate(720deg);\r\n        opacity: 0;\r\n    }\r\n`;\r\n\r\nconst Squares = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n\r\n    & li {\r\n        position: absolute;\r\n        display: block;\r\n        list-style: none;\r\n        width: 20px;\r\n        height: 20px;\r\n        background: rgba(255, 255, 255, 0.2);\r\n        animation: ${animate} 25s linear infinite;\r\n        bottom: -150px;\r\n    }\r\n    \r\n    & li:nth-child(1) {\r\n        left: 25%;\r\n        width: 80px;\r\n        height: 80px;\r\n        animation-delay: 0s;\r\n        animation-duration: 25s;\r\n    }\r\n    \r\n    \r\n    & li:nth-child(2) {\r\n        left: 10%;\r\n        width: 20px;\r\n        height: 20px;\r\n        animation-delay: 2s;\r\n        animation-duration: 12s;\r\n    }\r\n    \r\n    & li:nth-child(3) {\r\n        left: 70%;\r\n        width: 20px;\r\n        height: 20px;\r\n        animation-delay: 4s;\r\n        animation-duration: 25s;\r\n    }\r\n    \r\n    & li:nth-child(4) {\r\n        left: 40%;\r\n        width: 60px;\r\n        height: 60px;\r\n        animation-delay: 0s;\r\n        animation-duration: 18s;\r\n    }\r\n    \r\n    & li:nth-child(5) {\r\n        left: 65%;\r\n        width: 20px;\r\n        height: 20px;\r\n        animation-delay: 0s;\r\n        animation-duration: 25s;\r\n    }\r\n    \r\n    & li:nth-child(6) {\r\n        left: 75%;\r\n        width: 110px;\r\n        height: 110px;\r\n        animation-delay: 3s;\r\n        animation-duration: 18s;\r\n    }\r\n    \r\n    & li:nth-child(7) {\r\n        left: 35%;\r\n        width: 150px;\r\n        height: 150px;\r\n        animation-delay: 7s;\r\n        animation-duration: 25s;\r\n    }\r\n    \r\n    & li:nth-child(8) {\r\n        left: 50%;\r\n        width: 25px;\r\n        height: 25px;\r\n        animation-delay: 15s;\r\n        animation-duration: 45s;\r\n    }\r\n    \r\n    & li:nth-child(9) {\r\n        left: 20%;\r\n        width: 15px;\r\n        height: 15px;\r\n        animation-delay: 2s;\r\n        animation-duration: 35s;\r\n    }\r\n    \r\n    & li:nth-child(10) {\r\n        left: 85%;\r\n        width: 150px;\r\n        height: 150px;\r\n        animation-delay: 0s;\r\n        animation-duration: 11s;\r\n    }\r\n    \r\n    & li:nth-child(11) {\r\n        left: 80%;\r\n        width: 15px;\r\n        height: 15px;\r\n        animation-delay: 2s;\r\n        animation-duration: 22s;\r\n    }\r\n\r\n    & li:nth-child(12) {\r\n        left: 15%;\r\n        width: 40px;\r\n        height: 40px;\r\n        animation-delay: 10s;\r\n        animation-duration: 15s;\r\n    }\r\n\r\n    & li:nth-child(13) {\r\n        left: 70%;\r\n        width: 60px;\r\n        height: 60px;\r\n        animation-delay: 8s;\r\n        animation-duration: 35s;\r\n    }\r\n\r\n    & li:nth-child(14) {\r\n        left: 35%;\r\n        width: 120px;\r\n        height: 120px;\r\n        animation-delay: 5s;\r\n        animation-duration: 28s;\r\n    }\r\n\r\n    & li:nth-child(15) {\r\n        left: 10%;\r\n        width: 80px;\r\n        height: 80px;\r\n        animation-delay: 12s;\r\n        animation-duration: 22s;\r\n    }\r\n\r\n    & li:nth-child(16) {\r\n        left: 15%;\r\n        width: 70px;\r\n        height: 70px;\r\n        animation-delay: 0s;\r\n        animation-duration: 24s;\r\n    }\r\n\r\n    & li:nth-child(17) {\r\n        left: 45%;\r\n        width: 45px;\r\n        height: 45px;\r\n        animation-delay: 1s;\r\n        animation-duration: 45s;\r\n    }\r\n\r\n    & li:nth-child(18) {\r\n        left: 65%;\r\n        width: 65px;\r\n        height: 65px;\r\n        animation-delay: 6s;\r\n        animation-duration: 20s;\r\n    }\r\n\r\n    & li:nth-child(19) {\r\n        left: 50%;\r\n        width: 50px;\r\n        height: 50px;\r\n        animation-delay: 5s;\r\n        animation-duration: 18s;\r\n    }\r\n\r\n    & li:nth-child(20) {\r\n        left: 10%;\r\n        width: 30px;\r\n        height: 30px;\r\n        animation-delay: 8s;\r\n        animation-duration: 13s;\r\n    }\r\n\r\n    & p {\r\n        position: absolute;\r\n        display: block;\r\n        animation: ${animateNum} 30s linear infinite;\r\n        color: #FFFFFF99;\r\n        bottom: -150px;\r\n    }\r\n    \r\n    & p:nth-child(21) {\r\n        left: 5%;\r\n        font-size: 32px;\r\n        font-weight: bold;\r\n        animation-delay: 3s;\r\n        animation-duration: 28s;\r\n    }\r\n    \r\n    & p:nth-child(22) {\r\n        left: 10%;\r\n        font-size: 40px;\r\n        font-weight: bold;\r\n        animation-delay: 8s;\r\n        animation-duration: 19s;\r\n    }\r\n    \r\n    & p:nth-child(23) {\r\n        left: 15%;\r\n        font-size: 48px;\r\n        font-weight: bold;\r\n        animation-delay: 1s;\r\n        animation-duration: 18s;\r\n    }\r\n    \r\n    & p:nth-child(24) {\r\n        left: 20%;\r\n        font-size: 32px;\r\n        font-weight: bold;\r\n        animation-delay: 5s;\r\n        animation-duration: 30s;\r\n    }\r\n    \r\n    & p:nth-child(25) {\r\n        left: 25%;\r\n        font-size: 24px;\r\n        font-weight: bold;\r\n        animation-delay: 0s;\r\n        animation-duration: 18s;\r\n    }\r\n    \r\n    & p:nth-child(26) {\r\n        left: 30%;\r\n        font-size: 32px;\r\n        font-weight: bold;\r\n        animation-delay: 3s;\r\n        animation-duration: 18s;\r\n    }\r\n    \r\n    & p:nth-child(27) {\r\n        left: 35%;\r\n        font-size: 32px;\r\n        font-weight: bold;\r\n        animation-delay: 5s;\r\n        animation-duration: 18s;\r\n    }\r\n    \r\n    & p:nth-child(28) {\r\n        left: 40%;\r\n        font-size: 32px;\r\n        font-weight: bold;\r\n        animation-delay: 15s;\r\n        animation-duration: 45s;\r\n    }\r\n    \r\n    & p:nth-child(29) {\r\n        left: 45%;\r\n        font-size: 32px;\r\n        font-weight: bold;\r\n        animation-delay: 2s;\r\n        animation-duration: 35s;\r\n    }\r\n    \r\n    & p:nth-child(30) {\r\n        left: 50%;\r\n        font-size: 32px;\r\n        font-weight: bold;\r\n        animation-delay: 0s;\r\n        animation-duration: 11s;\r\n    }\r\n    \r\n    & p:nth-child(31) {\r\n        left: 55%;\r\n        font-size: 32px;\r\n        font-weight: bold;\r\n        animation-delay: 2s;\r\n        animation-duration: 22s;\r\n    }\r\n\r\n    & p:nth-child(32) {\r\n        left: 60%;\r\n        font-size: 32px;\r\n        font-weight: bold;\r\n        animation-delay: 10s;\r\n        animation-duration: 15s;\r\n    }\r\n\r\n    & p:nth-child(33) {\r\n        left: 65%;\r\n        font-size: 32px;\r\n        font-weight: bold;\r\n        animation-delay: 8s;\r\n        animation-duration: 35s;\r\n    }\r\n\r\n    & p:nth-child(34) {\r\n        left: 70%;\r\n        font-size: 32px;\r\n        font-weight: bold;\r\n        animation-delay: 5s;\r\n        animation-duration: 28s;\r\n    }\r\n\r\n    & p:nth-child(35) {\r\n        left: 75%;\r\n        font-size: 32px;\r\n        font-weight: bold;\r\n        animation-delay: 12s;\r\n        animation-duration: 22s;\r\n    }\r\n\r\n    & p:nth-child(36) {\r\n        left: 80%;\r\n        font-size: 48px;\r\n        font-weight: bold;\r\n        animation-delay: 16s;\r\n        animation-duration: 24s;\r\n    }\r\n\r\n    & p:nth-child(37) {\r\n        left: 85%;\r\n        font-size: 36px;\r\n        font-weight: bold;\r\n        animation-delay: 1s;\r\n        animation-duration: 45s;\r\n    }\r\n\r\n    & p:nth-child(38) {\r\n        left: 90%;\r\n        font-size: 28px;\r\n        font-weight: bold;\r\n        animation-delay: 6s;\r\n        animation-duration: 20s;\r\n    }\r\n\r\n    & p:nth-child(39) {\r\n        left: 95%;\r\n        font-size: 44px;\r\n        font-weight: bold;\r\n        animation-delay: 5s;\r\n        animation-duration: 18s;\r\n    }\r\n\r\n    & p:nth-child(40) {\r\n        left: 60%;\r\n        font-size: 40px;\r\n        font-weight: bold;\r\n        animation-delay: 12s;\r\n        animation-duration: 13s;\r\n    }\r\n`;\r\n\r\nconst SqContainer = React.memo(props => {\r\n    return (\r\n        <SquaresCntainer>\r\n            <Squares>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n                <p>{Math.round(Math.random() * (1000 - -1000) + -1000)}</p>\r\n            </Squares>\r\n        </SquaresCntainer>\r\n    )\r\n});\r\n\r\nexport { SqContainer };","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FormContainer } from './FormContainer';\r\nimport { SortContainer } from './SortContainer';\r\nimport { SqContainer } from './SqCont';\r\n\r\nconst MainContainer = styled.main`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 auto;\r\n    flex: 1 1 auto;\r\n    align-items: stretch;\r\n    position: relative;\r\n`;\r\n\r\nconst MainSection = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 960px;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 auto;\r\n    flex: 1 1 auto;\r\n    align-items: stretch;\r\n    height: 100%;\r\n    z-index: 1;\r\n`;\r\n\r\nconst getRandomNumber = () => {\r\n    return Math.round(Math.random()*10) > 5 ? Math.round(Math.random() * (1000 - -1000) + -1000) : Math.random() * (1000 - -1000) + -1000;\r\n}\r\n\r\nconst generateRandomIndex = () => {\r\n    let chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz$_^'.split('');\r\n    \r\n    let str = '';\r\n    for (let i = 0; i < 10; i++) {\r\n        str += chars[Math.floor(Math.random() * (chars.length))];\r\n    }\r\n    return str;\r\n}\r\n\r\nconst Main = props => {\r\n    const [numberArray, setNumberArray] = useState([]),\r\n          [enteredNumber, setEnteredNumber] = useState(''),\r\n          [defaultNumber, setDefaultNumber] = useState(getRandomNumber()),\r\n          [ms, setMs] = useState(1000),\r\n          [selectedSortType, setSelectedSortType] = useState('selectType'),\r\n          [btnDisabled, setBtnDisabled] = useState(1);\r\n\r\n    const sortTypes = [\r\n        {sortTypeValue: 'selectType',\r\n         sortTypeName: 'Select type'},\r\n        {sortTypeValue: 'bubbleSort',\r\n         sortTypeName: 'Bubble Sort',\r\n         sortTypeDescription: 'Bubble sort is a simple sorting algorithm. This sorting algorithm is comparison-based algorithm in which each pair of adjacent elements is compared and the elements are swapped if they are not in order. This algorithm is not suitable for large data sets as its average and worst case complexity are of Ο(n2) where n is the number of items.'},\r\n        {sortTypeValue: 'shakerSort',\r\n         sortTypeName: 'Shaker Sort',\r\n         sortTypeDescription: 'Cocktail Sort is a variation of Bubble sort. The Bubble sort algorithm always traverses elements from left and moves the largest element to its correct position in first iteration and second largest in second iteration and so on. Cocktail Sort traverses through a given array in both directions alternatively.'}\r\n    ];\r\n\r\n    const handleAddNumber = e => {\r\n        e.preventDefault();\r\n        let regexp = /^[\\-]{0,1}[0-9]{1,}(([\\.\\,]{0,1}[0-9]{1,})|([0-9]{0,}))$/;\r\n        if (enteredNumber !== '' && regexp.test(enteredNumber)) {\r\n            let newArr = numberArray.map(number => {\r\n                return {\r\n                    ...number,\r\n                    state: 'checked',\r\n                }\r\n            })\r\n            newArr = [...newArr, {\r\n                id: generateRandomIndex(),\r\n                value: Number(enteredNumber),\r\n                state: 'initial',\r\n            }]\r\n            setNumberArray(newArr);\r\n            setEnteredNumber('');\r\n            setDefaultNumber(getRandomNumber());\r\n        } else if (enteredNumber !== '' && !regexp.test(enteredNumber)) {\r\n            props.handleShowModal('Please, enter correct number value (it can be positive decimal floating negative/non-negative number).');\r\n        } else {\r\n            let newArr = numberArray.map(number => {\r\n                return {\r\n                    ...number,\r\n                    state: 'checked',\r\n                }\r\n            })\r\n            newArr = [...newArr, {\r\n                id: generateRandomIndex(),\r\n                value: Number(defaultNumber),\r\n                state: 'initial',\r\n            }];\r\n            setNumberArray(newArr);\r\n            setEnteredNumber('');\r\n            setDefaultNumber(getRandomNumber());\r\n        }\r\n    }\r\n\r\n    const handleChangeInputValue = value => {\r\n        setEnteredNumber(value);\r\n    }\r\n\r\n    const handleChangeSortType = value => {\r\n        setSelectedSortType(value);\r\n    }\r\n\r\n    const handleAddRandomTen = e => {\r\n        e.preventDefault();\r\n        let generatedArray = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            generatedArray.push({\r\n                id: generateRandomIndex(),\r\n                value: Number(getRandomNumber()),\r\n                state: 'initial',\r\n            })\r\n        }\r\n        let newArr = numberArray.map(number => {\r\n            return {\r\n                ...number,\r\n                state: 'checked',\r\n            }\r\n        })\r\n        newArr = [...newArr, ...generatedArray];\r\n        setNumberArray(newArr);\r\n    }\r\n\r\n    const handleClearList = e => {\r\n        e.preventDefault();\r\n        setNumberArray([]);\r\n    }\r\n\r\n    const startSort = () => {\r\n        let newArr = numberArray.map(number => {\r\n            return {\r\n                ...number,\r\n                state: 'checked',\r\n            }\r\n        });\r\n        setNumberArray(newArr);\r\n        switch (true) {\r\n            case selectedSortType === 'shakerSort':\r\n                shakerSort(newArr);\r\n                break;\r\n            case selectedSortType === 'bubbleSort':\r\n                bubbleSort(newArr);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSortBtnClick = (e, type) => {\r\n        e.preventDefault();\r\n        switch (true) {\r\n            case (selectedSortType === 'bubbleSort' && numberArray.length >= 2):\r\n                handleDisableBtn(type);\r\n                startSort();\r\n                break;\r\n            case (selectedSortType === 'shakerSort' && numberArray.length >= 2):\r\n                handleDisableBtn(type);\r\n                startSort();\r\n                break;\r\n            case ((selectedSortType === 'bubbleSort' || selectedSortType === 'shakerSort') && numberArray.length < 2):\r\n                props.handleShowModal('Please, add at least two numbers to sorting container.');\r\n                break;\r\n            case (selectedSortType === 'selectType' && numberArray.length < 2):\r\n                props.handleShowModal('Please, add at least two numbers to sorting container and select sort type.');\r\n                break;\r\n            case (selectedSortType === 'selectType' && numberArray.length >= 2):\r\n                props.handleShowModal('Please, select sort type.');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleDisableBtn = (type = 1) => {\r\n        if (type === 1) {\r\n            setBtnDisabled(2);\r\n        } else {\r\n            setBtnDisabled(1);\r\n        }\r\n    }\r\n\r\n    const handleMSChange = e => {\r\n        e.preventDefault();\r\n        setMs(Number(e.target.value));\r\n    }\r\n\r\n    const bubbleSort = arr => {\r\n        function outerLoop(currentIteration, iterationsAmount) {\r\n            if (currentIteration <= iterationsAmount) {\r\n                setTimeout(innerLoop, ms, 0, newArr.length - 1 - currentIteration, currentIteration, iterationsAmount);\r\n            } else {\r\n                setNumberArray(newArr.map(number => {return {...number, state: 'sorted'}}));\r\n                handleDisableBtn(2);\r\n                return;\r\n            }\r\n        }\r\n\r\n        function innerLoop(currentInnerIteration, innerIterationsAmount, currentOuterIteration, outerIterationsAmount) {\r\n            if (currentInnerIteration < innerIterationsAmount) {\r\n                setSelected(currentInnerIteration);\r\n                if (newArr[currentInnerIteration].value > newArr[currentInnerIteration + 1].value) {\r\n                    setTimeout(setChanging, ms, currentInnerIteration, currentOuterIteration, outerIterationsAmount, innerIterationsAmount);\r\n                } else {\r\n                    if (currentInnerIteration === innerIterationsAmount - 1) {\r\n                        setTimeout(setSorted, ms, currentInnerIteration, currentOuterIteration, outerIterationsAmount);\r\n                    } else {\r\n                        setTimeout(innerLoop, ms, currentInnerIteration + 1, newArr.length - 1 - currentOuterIteration, currentOuterIteration, outerIterationsAmount);\r\n                    }\r\n                }\r\n            } else {\r\n                setTimeout(outerLoop, 0, currentOuterIteration + 1, outerIterationsAmount);\r\n            }\r\n        }\r\n\r\n        function setSelected(currentIndex) {\r\n            newArr = newArr.map((number, index) => {\r\n                if (index === currentIndex || index === (currentIndex + 1)) {\r\n                    return {\r\n                        ...number,\r\n                        state: 'selected',\r\n                    }\r\n                } else {\r\n                    if (number.state === 'sorted') {\r\n                        return {\r\n                            ...number,\r\n                            state: 'sorted'\r\n                        }\r\n                    } else {\r\n                        return {\r\n                            ...number,\r\n                            state: 'checked'\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            setNumberArray(newArr);\r\n        }\r\n\r\n        function setChanging(currentIndex, currentOuterIteration, outerIterationsAmount, innerIterationsAmount) {\r\n            newArr = newArr.map((number, index) => {\r\n                switch (true) {\r\n                    case (index === currentIndex):\r\n                        return {\r\n                            ...number,\r\n                            state: 'changeToRight'\r\n                        }\r\n                    case (index === currentIndex + 1):\r\n                        return {\r\n                            ...number,\r\n                            state: 'changeToLeft'\r\n                        }\r\n                    default:\r\n                        if (number.state === 'sorted') {\r\n                            return {\r\n                                ...number,\r\n                                state: 'sorted'\r\n                            }\r\n                        } else {\r\n                            return {\r\n                                ...number,\r\n                                state: 'checked'\r\n                            }\r\n                        }\r\n                }\r\n            })\r\n            setNumberArray(newArr);\r\n            [newArr[currentIndex], newArr[currentIndex + 1]] = [newArr[currentIndex + 1], newArr[currentIndex]];\r\n            if (currentIndex === innerIterationsAmount - 1) {\r\n                setTimeout(setSorted, ms, currentIndex, currentOuterIteration, outerIterationsAmount);\r\n            } else {\r\n                setTimeout(innerLoop, ms, currentIndex + 1, newArr.length - 1 - currentOuterIteration, currentOuterIteration, outerIterationsAmount);\r\n            }\r\n        }\r\n\r\n        function setSorted(currentIndex, currentOuterIteration, outerIterationsAmount) {\r\n            newArr = newArr.map((number, index) => {\r\n                if (index === currentIndex + 1) {\r\n                    return {\r\n                        ...number,\r\n                        state: 'sorted',\r\n                    }\r\n                } else {\r\n                    if (number.state === 'sorted') {\r\n                        return {\r\n                            ...number,\r\n                            state: 'sorted'\r\n                        }\r\n                    } else {\r\n                        return {\r\n                            ...number,\r\n                            state: 'checked'\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            setNumberArray(newArr);\r\n            setTimeout(outerLoop, 0, currentOuterIteration + 1, outerIterationsAmount);\r\n        }\r\n\r\n        let newArr = arr.slice();\r\n\r\n        outerLoop(0, newArr.length - 1);\r\n    };\r\n\r\n    const shakerSort = arr => {\r\n        function forwardLoop(startInd, currentInd, lastInd) {\r\n            if (currentInd < lastInd) {\r\n                setSelected(newArr, currentInd, 'forward');\r\n                if (newArr[currentInd].value > newArr[currentInd + 1].value) {\r\n                    setTimeout(setChanging, ms, newArr, currentInd, 'forward', startInd, lastInd);\r\n                } else {\r\n                    setTimeout(forwardLoop, ms, startInd, currentInd + 1, lastInd);\r\n                }\r\n            } else if (currentInd === lastInd && currentInd - startInd === 1) {\r\n                setSorted(newArr, startInd, currentInd, lastInd);\r\n                handleDisableBtn(2);\r\n                return;\r\n            } else {\r\n                setSorted(newArr, startInd, currentInd, lastInd, 'reverse');\r\n            }\r\n        }\r\n\r\n        function reverseLoop(startInd, currentInd, lastInd) {\r\n            if (startInd < currentInd) {\r\n                setSelected(newArr, currentInd, 'reverse');\r\n                if (newArr[currentInd].value < newArr[currentInd - 1].value) {\r\n                    setTimeout(setChanging, ms, newArr, currentInd, 'reverse', startInd, lastInd);\r\n                } else {\r\n                    setTimeout(reverseLoop, ms, startInd, currentInd - 1, lastInd);\r\n                }\r\n            } else if (startInd === currentInd && lastInd - currentInd === 1) {\r\n                setSorted(newArr, startInd, currentInd, lastInd);\r\n                handleDisableBtn(2);\r\n                return;\r\n            } else {\r\n                setSorted(newArr, startInd, currentInd, lastInd, 'forward');\r\n            }\r\n        }\r\n\r\n        function setSelected(array, currentIndex, type) {\r\n            setNumberArray(array.map((number, index) => {\r\n                if (index === currentIndex || index === (type === 'forward' ? currentIndex + 1 : currentIndex - 1)) {\r\n                    return {\r\n                        ...number,\r\n                        state: 'selected',\r\n                    }\r\n                } else {\r\n                    if (number.state === 'sorted') {\r\n                        return {\r\n                            ...number,\r\n                            state: 'sorted'\r\n                        }\r\n                    } else {\r\n                        return {\r\n                            ...number,\r\n                            state: 'checked'\r\n                        }\r\n                    }\r\n                }\r\n            }));\r\n        }\r\n\r\n        function setChanging(array, currentIndex, type, startIndex, lastIndex) {\r\n            if (type === 'forward') {\r\n                setNumberArray(array.map((number, index) => {\r\n                    switch (true) {\r\n                        case (index === currentIndex):\r\n                            return {\r\n                                ...number,\r\n                                state: 'changeToRight'\r\n                            }\r\n                        case (index === currentIndex + 1):\r\n                            return {\r\n                                ...number,\r\n                                state: 'changeToLeft'\r\n                            }\r\n                        default:\r\n                            if (number.state === 'sorted') {\r\n                                return {\r\n                                    ...number,\r\n                                    state: 'sorted'\r\n                                }\r\n                            } else {\r\n                                return {\r\n                                    ...number,\r\n                                    state: 'checked'\r\n                                }\r\n                            }\r\n                    }\r\n                }));\r\n                [array[currentIndex], array[currentIndex + 1]] = [array[currentIndex + 1], array[currentIndex]];\r\n                setTimeout(forwardLoop, ms, startIndex, currentIndex + 1, lastIndex);\r\n            } else {\r\n                setNumberArray(array.map((number, index) => {\r\n                    switch (true) {\r\n                        case (index === currentIndex):\r\n                            return {\r\n                                ...number,\r\n                                state: 'changeToLeft'\r\n                            }\r\n                        case (index === currentIndex - 1):\r\n                            return {\r\n                                ...number,\r\n                                state: 'changeToRight'\r\n                            }\r\n                        default:\r\n                            if (number.state === 'sorted') {\r\n                                return {\r\n                                    ...number,\r\n                                    state: 'sorted'\r\n                                }\r\n                            } else {\r\n                                return {\r\n                                    ...number,\r\n                                    state: 'checked'\r\n                                }\r\n                            }\r\n                    }\r\n                }));\r\n                [array[currentIndex], array[currentIndex - 1]] = [array[currentIndex - 1], array[currentIndex]];\r\n                setTimeout(reverseLoop, ms, startIndex, currentIndex - 1, lastIndex);\r\n            }\r\n        }\r\n\r\n        function setSorted(array, startIndex, currentIndex, lastIndex, type) {\r\n            if (type) {\r\n                newArr = array.map((number, index) => {\r\n                    if (index === currentIndex) {\r\n                        return {\r\n                            ...number,\r\n                            state: 'sorted',\r\n                        }\r\n                    } else {\r\n                        if (number.state === 'sorted') {\r\n                            return {\r\n                                ...number,\r\n                                state: 'sorted'\r\n                            }\r\n                        } else {\r\n                            return {\r\n                                ...number,\r\n                                state: 'checked'\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                setNumberArray(newArr);\r\n                if (type === 'forward') {\r\n                    setTimeout(forwardLoop, ms, startIndex + 1, currentIndex + 1, lastIndex);\r\n                } else {\r\n                    setTimeout(reverseLoop, ms, startIndex, lastIndex - 1, lastIndex - 1);\r\n                }\r\n            } else {\r\n                newArr = array.map(number => {\r\n                    return {\r\n                        ...number,\r\n                        state: 'sorted',\r\n                    };\r\n                });\r\n                setNumberArray(newArr);\r\n            }\r\n        }\r\n\r\n        let newArr = arr.slice();\r\n\r\n        forwardLoop(0, 0, newArr.length - 1);\r\n    }\r\n\r\n    return (\r\n        <MainContainer>\r\n            <SqContainer/>\r\n            <MainSection>\r\n                <FormContainer \r\n                    defaultNumber={defaultNumber} \r\n                    enteredNumber={enteredNumber} \r\n                    handleAddNumber={handleAddNumber} \r\n                    handleChangeInputValue={handleChangeInputValue} \r\n                    sortTypes={sortTypes} \r\n                    selectedSortType={selectedSortType} \r\n                    handleChangeSortType={handleChangeSortType} \r\n                    handleAddRandomTen={handleAddRandomTen} \r\n                    handleClearList={handleClearList} \r\n                    handleSortBtnClick={handleSortBtnClick} \r\n                    ms={ms} \r\n                    handleMSChange={handleMSChange} \r\n                    btnDisabled={btnDisabled} \r\n                    handleDisableBtn={handleDisableBtn}\r\n                    />\r\n                <SortContainer numberArray={numberArray} ms={ms}/>\r\n            </MainSection>\r\n        </MainContainer>\r\n    )\r\n};\r\n\r\nexport { Main };","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst FooterContainer = styled.footer`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    padding: 1em 0;\r\n    background-color: #00b349;\r\n    color: #003d34;\r\n    text-align: center;\r\n`;\r\n\r\nconst H3 = styled.h3`\r\n    font-size: 12px;\r\n    transition: all 1s;\r\n    &:hover {\r\n        font-size: 18px;\r\n    }\r\n`;\r\n\r\nconst Link = styled.a`\r\n    color: #003d34;\r\n`;\r\n\r\nconst Footer = props => {\r\n    return (\r\n        <FooterContainer>\r\n            <H3>This project uses <Link href='https://reactjs.org/'>React</Link>, <Link href='https://styled-components.com/'>styled-components</Link> and <Link href='http://react-animations.herokuapp.com/'>react-animations</Link>.<br />This project was created with educational purposes. <Link href='https://github.com/IvanMankovich/SortingAlgorithms'>GitHub</Link></H3>\r\n        </FooterContainer>\r\n    )\r\n};\r\n\r\nexport { Footer };","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ModalPadding = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    background-color: #FFFFFF99;\r\n    backdrop-filter: blur(5px);\r\n    z-index: 3;\r\n`;\r\n\r\nconst ModalWindow = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: #FFFFFF77;\r\n    border: 1px solid #00000033;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n    width: 80%;\r\n    height: 80%;\r\n    margin: auto;\r\n`;\r\n\r\nconst ModalHeader = styled.section`\r\n    padding: 3px 10px;\r\n    border-bottom: 1px solid #FFFFFF77;\r\n`;\r\n\r\nconst H4 = styled.h4`\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    text-align: center;\r\n`;\r\n\r\nconst CloseBtn = styled.button`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    transform: translate(-5px, -5px)\r\n               rotate(45deg);\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    color: #00000099;\r\n    background-color: transparent;\r\n    border: none;\r\n    width: 24px;\r\n    height: 24px;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst ModalBody = styled.section`\r\n    padding: 10px;\r\n`;\r\n\r\nconst ModalText = styled.p`\r\n    font-size: 14px;\r\n    text-align: center;\r\n`;\r\n\r\nconst Modal = props => {\r\n    return (\r\n        <ModalPadding id='modalPadding' onClick={e => {(e.target.id === 'modalPadding' || e.target.id === 'modalX') && props.handleShowModal()}}>\r\n            <ModalWindow>\r\n                <ModalHeader>\r\n                    <CloseBtn id='modalX' type='button'>+</CloseBtn>\r\n                    <H4>Warning</H4>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <ModalText>{props.modalText}</ModalText>\r\n                </ModalBody>\r\n            </ModalWindow>\r\n        </ModalPadding>\r\n    )\r\n};\r\n\r\nexport { Modal };","import React, { useState } from 'react';\nimport { Header } from './components/Header';\nimport { Main } from './components/Main';\nimport { Footer } from './components/Footer';\nimport { Modal } from './components/Main/Modal';\n\nconst App = React.memo(props => {\n    const [isModalOpen, setModalOpen] = useState('closed'),\n          [modalText, setModalText] = useState('');\n\n    const handleShowModal = (text = 'Unknown message.') => {\n        if (isModalOpen === 'closed') {\n            setModalText(text);\n            setModalOpen('open');\n        } else {\n            setModalOpen('closed');\n            setModalText('');\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Header />\n            <Main handleShowModal={handleShowModal}/>\n            <Footer />\n            {isModalOpen === 'open' ? <Modal handleShowModal={handleShowModal} modalText={modalText}/> : null}\n        </React.Fragment>\n    )\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './reset.css';\nimport * as serviceWorker from './serviceWorker';\nimport styled, { keyframes } from 'styled-components';\nimport { fadeOut, slideOutUp, slideOutDown } from 'react-animations';\n\nconst RootContainer = styled.div`\n    min-height: 100vh;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    box-sizing: border-box;\n    font-family: Arial, Helvetica, sans-serif;\n    color: #003d34;\n    overflow: hidden;\n`;\n\nconst Panel = styled.div`\n    height: 100%;\n    width: 100%;\n    z-index: 2;\n    position: absolute;\n    background: turquoise;\n`;\n\nconst H1 = styled.h1`\n    position: absolute;\n    top: 30%;\n    left: 50%;\n    letter-spacing: 0.25em;\n    transform: translate(-50%, 0);\n    font-size: 48px;\n    font-weight: bold;\n    color: #FFFFFF;\n    letter-spacing: 0.25em;\n\n    @media screen and (max-width: 480px) {\n        font-size: 32px;\n    }\n`;\n\nconst slideOutDownAnimation = keyframes`${slideOutDown}`;\nconst slideOutUpAnimation = keyframes`${slideOutUp}`;\n\nconst PanelTop = styled(Panel)`\n    top: 0;\n    background-color: #003d34;\n    clip-path: polygon(0 0, 100% 0, 100% 40%, 0 60%);\n\n`;\n\nconst PanelBottom = styled(Panel)`\n    bottom: 0;\n    background-color: #94ebd8;\n    clip-path: polygon(0 60%, 100% 40%, 100% 100%, 0 100%);\n`;\n\nconst PanelTopHide = styled(Panel)`\n    background-color: #003d34;\n    clip-path: polygon(0 0, 100% 0, 100% 40%, 0 60%);\n    animation: 1 1s ${slideOutUpAnimation};\n`;\n\nconst PanelBottomHide = styled(Panel)`\n    background-color: #94ebd8;\n    clip-path: polygon(0 60%, 100% 40%, 100% 100%, 0 100%);\n    animation: 1 1s ${slideOutDownAnimation};\n`;\n\nconst StartButton = styled.button`\n    box-sizing: border-box;\n    width: 200px;\n    height: 80px;\n    border: 5px solid #FFFFFF;\n    background-color: #000000AA;\n    font-weight: bold;\n    color: #FFFFFF;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate( -50%, -50%);\n    z-index: 5;\n    border-radius: 40px;\n    font-size: 32px;\n    transition: all 0.5s;\n\n    &:hover {\n        width: 220px;\n        height: 100px;\n        border: 5px solid #FFFFFF;\n        font-size: 36px;\n    }\n`;\n\nconst fadeOutAnimation = keyframes`${fadeOut}`;\n\nconst StartButtonHide = styled(StartButton)`\n    width: 220px;\n    height: 100px;\n    border: 5px solid #FFFFFF;\n    font-size: 36px;\n    animation: 1 1s ${fadeOutAnimation};\n`;\n\nconst Root = () => {\n    const [startPage, setStartPage] = useState(1);\n\n    const handleClickStart = e => {\n        e.preventDefault();\n        setStartPage(2);\n        setTimeout(() => setStartPage(3), 1000);\n    }\n    \n    const toRender = () => {\n        switch (true) {\n            case (startPage === 1):\n                return (\n                    <React.Fragment>\n                        <PanelTop>\n                            <H1>Sorting algorithms</H1>\n                        </PanelTop>\n                        <PanelBottom/>\n                        <StartButton type='button' onClick={e => handleClickStart(e)}>START</StartButton>\n                    </React.Fragment>\n                );\n            case (startPage === 2):\n                return (\n                    <React.Fragment>\n                        <PanelTopHide/>\n                        <PanelBottomHide/>\n                        <StartButtonHide type='button' onClick={e => {e.preventDefault()}}>START</StartButtonHide>\n                    </React.Fragment>\n                )\n            default:\n                return null;\n        }\n    }\n\n    return (\n        <RootContainer>\n            {toRender()}\n            <App />\n        </RootContainer>\n    )\n}\n\nReactDOM.render(\n    <Root/>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}